@*@model PaginatedList<TravelClient.Models.Review>*@
@{
    ViewData["Title"] = "Reviews";
}

<h1>All Reviews</h1>
<h3>Actions:</h3>
<p>@Html.ActionLink("Add a new review to the site", "Create")</p>

<h3>Reviews:</h3>
<p>Most popular destination: @ViewBag.ReviewPopular</p>

@using (Html.BeginForm())
{
  <p>Destination: <input type="text" name="destination" /></p>
  <p>Country: <input type="text" name="country" /></p>
  <br>
  <input type="submit" value="Search" class="btn btn-primary"/>
}
<br>
<ol>
 @foreach (Review review in Model)
{
  <li><strong>@review.ReviewDestination | Rating: @review.ReviewRating </strong>| <a href="/Reviews/Details/@(review.ReviewId)">View Details</a></li>
}
</ol> 

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
